---
- name: gather OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - '{{ ansible_bios_version }}-{{ ansible_distribution }}.yml'
    - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_distribution }}.yml'
    - '{{ ansible_os_family }}.yml'
    - '{{ cloud_platform }}-{{ ansible_distribution }}.yml'
  tags:
    - vars

- name: install required packages
  package:
    name: '{{ item }}'
    state: present
  become: true
  with_items: '{{ PACKAGES }}'

- name: download hmycli
  get_url: 
    url: https://harmony.one/hmycli
    dest: '{{ USER.home }}/hmy'
    mode: '0755'

- name: download node.sh
  get_url: 
    url: https://raw.githubusercontent.com/harmony-one/harmony/main/scripts/node.sh
    dest: '{{ USER.home }}/node.sh'
    mode: '0755'

- name: create .config/rclone directory
  file:
    path: "{{ USER.home }}/.config/rclone"
    state: directory

- name: download rclone.sh
  get_url: 
    url: https://raw.githubusercontent.com/harmony-one/terraform/master/aws.1/files/rclone.sh
    dest: '{{ USER.home }}/rclone.sh'
    mode: '0755'

- name: download rclone.conf
  get_url:
    url: https://raw.githubusercontent.com/harmony-one/terraform/master/aws.1/files/rclone.conf
    dest: '{{ USER.home }}/.config/rclone/rclone.conf'
    mode: '0644'

- name: get node.sh version
  shell: '{{ USER.home }}/node.sh -v'
  register: ver

- name: print node.sh version
  debug:
    var: ver.stderr

- name: clean up legacy
  ignore_errors: yes
  file:
    path: "{{ USER.home }}/{{ item }}"
    state: absent
  with_items:
    - latest
    - staging
    - .hmy/blskeys
    - install-rclone.sh
    - node.err
    - node.log

- name: download harmony binaries
  shell: "{{ USER.home }}/node.sh -N {{ network }} -d && mv -f staging/harmony {{ USER.home }} > node.log 2> node.err"

- name: get harmony version
  shell: "{{ USER.home }}/harmony --version"
  register: Ver

- name: print harmony version
  debug:
    var: Ver.stderr

- name: create .hmy/blskeys directory
  file:
    path: "{{ USER.home }}/.hmy/blskeys"
    state: directory

- name: copy all bls keys and pass for validator node
  copy:
    src: "{{ host }}/"
    dest: "{{ USER.home }}/.hmy/blskeys/"
  when: node_type_var != 'Explorer'

- name: create dummy bls key and pass for explorer node
  file:
    path: "{{ USER.home }}/.hmy/blskeys/{{ item }}"
    state: touch
  with_items:
    - "bls.key"
    - "bls.pass"
  when: node_type_var == 'Explorer'

- name: tasks needs sudo
  block:
   - name: copy harmony service file
     template:
       src: harmony.service.j2
       dest: "/etc/systemd/system/harmony.service"
       backup: yes
       force: yes

   - name: disable selinux
     ignore_errors: yes
     selinux:
       state: disabled

   - name: enable harmony service
     systemd: 
       name: harmony
       daemon_reload: yes
       enabled: yes
       state: started
  become: true
  become_user: root

- name: tasks for Validator
  block:
   - name: create db directory
     file:
       path: "{{ USER.home }}/harmony_db_{{ shard }}"
       state: directory

   - name: install rclone 1
     get_url:
       url: https://rclone.org/install.sh
       dest: '{{ USER.home }}/install-rclone.sh'
       mode: '0755'

   - name: install rclone 2
     command:
        cmd: "{{ USER.home }}/install-rclone.sh"
     ignore_errors: yes
     become: true

   - name: run rclone
     command:
       cmd: "{{ USER.home }}/rclone.sh mainnet.min"
       chdir: "{{ USER.home }}/"
     ignore_errors: yes
  when: node_type_var != 'Explorer' and do_rclone == 'true'
